{"ast":null,"code":"var _jsxFileName = \"/Users/eugo/commentsold/lumen/public/front/src/Inventory.jsx\";\nimport React, { useState } from \"react\";\nimport GridTable from \"@nadavshaar/react-grid-table\";\nimport getColumns from \"./getInventoryColumns\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Inventory = async props => {\n  /**\n   * TODO move to .env\n   */\n  const baseUrl = \"http://localhost:8000\";\n  const access_token = sessionStorage.getItem('access_token');\n\n  // console.log(`access_token=${access_token}`);\n  // const data = await axios.post(`${baseUrl}/api/inventory`, {limit: 500, product_id: props.productId}, {headers: { Authorization: `Bearer ${access_token}` }})\n  // .catch(err => {console.log(err);})\n  // console.log(data.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Inventory\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n  /*return (\n      \n      \n      <div>\n          <h2>Inventory</h2>\n          <GridTable\n              columns={getColumns()}\n              rows={data.data}\n              onRowClick={(\n                  { data: { id }, isEdit },\n                  { rowSelectionApi: { getIsRowSelectable, toggleRowSelection } }\n                ) => {props.setProductId(id);props.stateChanger('inventory');}\n              }\n          />\n      </div>\n    );*/\n};\n_c = Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","GridTable","getColumns","axios","jsxDEV","_jsxDEV","Inventory","props","baseUrl","access_token","sessionStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eugo/commentsold/lumen/public/front/src/Inventory.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport GridTable from \"@nadavshaar/react-grid-table\";\nimport getColumns from \"./getInventoryColumns\";\nimport axios from 'axios';\n\nexport const Inventory = async (props) => { \n    /**\n     * TODO move to .env\n     */\n    const baseUrl = \"http://localhost:8000\";\n    \n   \n    const access_token = sessionStorage.getItem('access_token');\n    \n    // console.log(`access_token=${access_token}`);\n    // const data = await axios.post(`${baseUrl}/api/inventory`, {limit: 500, product_id: props.productId}, {headers: { Authorization: `Bearer ${access_token}` }})\n    // .catch(err => {console.log(err);})\n    // console.log(data.data);\n    return (<div>Inventory</div>);\n    /*return (\n        \n        \n        <div>\n            <h2>Inventory</h2>\n            <GridTable\n                columns={getColumns()}\n                rows={data.data}\n                onRowClick={(\n                    { data: { id }, isEdit },\n                    { rowSelectionApi: { getIsRowSelectable, toggleRowSelection } }\n                  ) => {props.setProductId(id);props.stateChanger('inventory');}\n                }\n            />\n        </div>\n      );*/\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EACtC;AACJ;AACA;EACI,MAAMC,OAAO,GAAG,uBAAuB;EAGvC,MAAMC,YAAY,GAAGC,cAAc,CAACC,OAAO,CAAC,cAAc,CAAC;;EAE3D;EACA;EACA;EACA;EACA,oBAAQN,OAAA;IAAAO,QAAA,EAAK;EAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GA9BYX,SAAS;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}