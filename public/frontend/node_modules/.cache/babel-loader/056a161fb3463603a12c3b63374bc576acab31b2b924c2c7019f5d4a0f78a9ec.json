{"ast":null,"code":"var _jsxFileName = \"/Users/eugo/commentsold/lumen/public/front/src/Products.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport GridTable from \"@nadavshaar/react-grid-table\";\nimport data from \"./data.json\";\nimport getColumns from \"./getColumns.js\";\n//import \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Products = props => {\n  _s();\n  const initialSelectedRows = data.filter(_ref => {\n    let {\n      gender\n    } = _ref;\n    return gender === \"Male\";\n  }).map(_ref2 => {\n    let {\n      id\n    } = _ref2;\n    return id;\n  });\n  const [selectedRows, setSelectedRows] = useState(initialSelectedRows);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(GridTable, {\n      columns: getColumns(),\n      rows: data,\n      selectedRowsIds: selectedRows,\n      onSelectedRowsChange: setSelectedRows,\n      onRowClick: (_ref3, _ref4) => {\n        let {\n          data: {\n            id\n          },\n          isEdit\n        } = _ref3;\n        let {\n          rowSelectionApi: {\n            getIsRowSelectable,\n            toggleRowSelection\n          }\n        } = _ref4;\n        return !isEdit && getIsRowSelectable(id) && toggleRowSelection(id);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n/*export const Products = (props) => {\n    var data = [\n  {\n    \"id\": 0,\n    \"name\": \"Mayer Leonard\",\n    \"city\": \"Kapowsin\",\n    \"state\": \"Hawaii\",\n    \"country\": \"United Kingdom\",\n    \"company\": \"Ovolo\",\n    \"favoriteNumber\": 7\n  },\n\n];\n    console.log(props)\n    return (\n        <>\n            Products\n            \n        </>\n    )\n}*/\n_s(Products, \"nmPfBH1JaaqKOjrPstjHjjVvNyY=\");\n_c = Products;\nvar _c;\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"names":["React","useState","GridTable","data","getColumns","jsxDEV","_jsxDEV","Products","props","_s","initialSelectedRows","filter","_ref","gender","map","_ref2","id","selectedRows","setSelectedRows","className","children","columns","rows","selectedRowsIds","onSelectedRowsChange","onRowClick","_ref3","_ref4","isEdit","rowSelectionApi","getIsRowSelectable","toggleRowSelection","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eugo/commentsold/lumen/public/front/src/Products.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport GridTable from \"@nadavshaar/react-grid-table\";\nimport data from \"./data.json\";\nimport getColumns from \"./getColumns.js\";\n//import \"./styles.css\";\n\nexport const Products = (props) => {\n  const initialSelectedRows = data\n    .filter(({ gender }) => gender === \"Male\")\n    .map(({ id }) => id);\n\n    \n\n  const [selectedRows, setSelectedRows] = useState(initialSelectedRows);\n\n  return (\n    <div className=\"App\">\n      <GridTable\n        columns={getColumns()}\n        rows={data}\n        selectedRowsIds={selectedRows}\n        onSelectedRowsChange={setSelectedRows}\n        onRowClick={(\n          { data: { id }, isEdit },\n          { rowSelectionApi: { getIsRowSelectable, toggleRowSelection } }\n        ) => !isEdit && getIsRowSelectable(id) && toggleRowSelection(id)}\n      />\n    </div>\n  );\n};\n\n\n\n/*export const Products = (props) => {\n    var data = [\n  {\n    \"id\": 0,\n    \"name\": \"Mayer Leonard\",\n    \"city\": \"Kapowsin\",\n    \"state\": \"Hawaii\",\n    \"country\": \"United Kingdom\",\n    \"company\": \"Ovolo\",\n    \"favoriteNumber\": 7\n  },\n\n];\n    console.log(props)\n    return (\n        <>\n            Products\n            \n        </>\n    )\n}*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,UAAU,MAAM,iBAAiB;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACjC,MAAMC,mBAAmB,GAAGP,IAAI,CAC7BQ,MAAM,CAACC,IAAA;IAAA,IAAC;MAAEC;IAAO,CAAC,GAAAD,IAAA;IAAA,OAAKC,MAAM,KAAK,MAAM;EAAA,EAAC,CACzCC,GAAG,CAACC,KAAA;IAAA,IAAC;MAAEC;IAAG,CAAC,GAAAD,KAAA;IAAA,OAAKC,EAAE;EAAA,EAAC;EAItB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAACS,mBAAmB,CAAC;EAErE,oBACEJ,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA,CAACJ,SAAS;MACRmB,OAAO,EAAEjB,UAAU,CAAC,CAAE;MACtBkB,IAAI,EAAEnB,IAAK;MACXoB,eAAe,EAAEN,YAAa;MAC9BO,oBAAoB,EAAEN,eAAgB;MACtCO,UAAU,EAAEA,CAAAC,KAAA,EAAAC,KAAA;QAAA,IACV;UAAExB,IAAI,EAAE;YAAEa;UAAG,CAAC;UAAEY;QAAO,CAAC,GAAAF,KAAA;QAAA,IACxB;UAAEG,eAAe,EAAE;YAAEC,kBAAkB;YAAEC;UAAmB;QAAE,CAAC,GAAAJ,KAAA;QAAA,OAC5D,CAACC,MAAM,IAAIE,kBAAkB,CAACd,EAAE,CAAC,IAAIe,kBAAkB,CAACf,EAAE,CAAC;MAAA;IAAC;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA1B,EAAA,CA3BaF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}