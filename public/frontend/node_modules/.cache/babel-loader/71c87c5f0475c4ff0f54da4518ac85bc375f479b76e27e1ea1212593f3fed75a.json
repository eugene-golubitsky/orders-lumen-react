{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.defaultSort = defaultSort;\nexports.setSortProperties = setSortProperties;\nexports.getSortIconProps = getSortIconProps;\n/* Sorts the given data by the specified column\n * @parameter {array<object>} data - The data to sort\n * @parameter {string} column - the name of the column to sort\n * @parameter {boolean optional} sortAscending - whether or not to sort this column in ascending order\n *\n * TODO: Needs tests!\n */\nfunction defaultSort(data, column) {\n  var sortAscending = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return data.sort(function (original, newRecord) {\n    var columnKey = column.split('.');\n    var originalValue = original.hasIn(columnKey) && original.getIn(columnKey) || '';\n    var newRecordValue = newRecord.hasIn(columnKey) && newRecord.getIn(columnKey) || '';\n\n    //TODO: This is about the most cheezy sorting check ever.\n    //Make it better\n    if (originalValue === newRecordValue) {\n      return 0;\n    } else if (originalValue > newRecordValue) {\n      return sortAscending ? 1 : -1;\n    } else {\n      return sortAscending ? -1 : 1;\n    }\n  });\n}\nfunction setSortProperties(_ref) {\n  var setSortColumn = _ref.setSortColumn,\n    sortProperty = _ref.sortProperty,\n    columnId = _ref.columnId;\n  return function () {\n    if (sortProperty === null) {\n      setSortColumn({\n        id: columnId,\n        sortAscending: true\n      });\n      return;\n    }\n    var newSortProperty = _extends({}, sortProperty, {\n      sortAscending: !sortProperty.sortAscending\n    });\n    setSortColumn(newSortProperty);\n  };\n}\nfunction getSortIconProps(props) {\n  var sortProperty = props.sortProperty,\n    sortAscendingIcon = props.sortAscendingIcon,\n    sortDescendingIcon = props.sortDescendingIcon;\n  var sortAscendingClassName = props.sortAscendingClassName,\n    sortDescendingClassName = props.sortDescendingClassName;\n  if (sortProperty) {\n    return sortProperty.sortAscending ? {\n      icon: sortAscendingIcon,\n      iconClassName: sortAscendingClassName\n    } : {\n      icon: sortDescendingIcon,\n      iconClassName: sortDescendingClassName\n    };\n  }\n\n  // return null so we don't render anything if no sortProperty\n  return null;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","defaultSort","setSortProperties","getSortIconProps","data","column","sortAscending","undefined","sort","original","newRecord","columnKey","split","originalValue","hasIn","getIn","newRecordValue","_ref","setSortColumn","sortProperty","columnId","id","newSortProperty","props","sortAscendingIcon","sortDescendingIcon","sortAscendingClassName","sortDescendingClassName","icon","iconClassName"],"sources":["/Users/eugo/commentsold/lumen/public/front/node_modules/griddle-react/dist/module/utils/sortUtils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.defaultSort = defaultSort;\nexports.setSortProperties = setSortProperties;\nexports.getSortIconProps = getSortIconProps;\n/* Sorts the given data by the specified column\n * @parameter {array<object>} data - The data to sort\n * @parameter {string} column - the name of the column to sort\n * @parameter {boolean optional} sortAscending - whether or not to sort this column in ascending order\n *\n * TODO: Needs tests!\n */\nfunction defaultSort(data, column) {\n  var sortAscending = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  return data.sort(function (original, newRecord) {\n    var columnKey = column.split('.');\n    var originalValue = original.hasIn(columnKey) && original.getIn(columnKey) || '';\n    var newRecordValue = newRecord.hasIn(columnKey) && newRecord.getIn(columnKey) || '';\n\n    //TODO: This is about the most cheezy sorting check ever.\n    //Make it better\n    if (originalValue === newRecordValue) {\n      return 0;\n    } else if (originalValue > newRecordValue) {\n      return sortAscending ? 1 : -1;\n    } else {\n      return sortAscending ? -1 : 1;\n    }\n  });\n}\n\nfunction setSortProperties(_ref) {\n  var setSortColumn = _ref.setSortColumn,\n      sortProperty = _ref.sortProperty,\n      columnId = _ref.columnId;\n\n  return function () {\n    if (sortProperty === null) {\n      setSortColumn({ id: columnId, sortAscending: true });\n      return;\n    }\n\n    var newSortProperty = _extends({}, sortProperty, {\n      sortAscending: !sortProperty.sortAscending\n    });\n\n    setSortColumn(newSortProperty);\n  };\n}\n\nfunction getSortIconProps(props) {\n  var sortProperty = props.sortProperty,\n      sortAscendingIcon = props.sortAscendingIcon,\n      sortDescendingIcon = props.sortDescendingIcon;\n  var sortAscendingClassName = props.sortAscendingClassName,\n      sortDescendingClassName = props.sortDescendingClassName;\n\n\n  if (sortProperty) {\n    return sortProperty.sortAscending ? {\n      icon: sortAscendingIcon,\n      iconClassName: sortAscendingClassName\n    } : {\n      icon: sortDescendingIcon,\n      iconClassName: sortDescendingClassName\n    };\n  }\n\n  // return null so we don't render anything if no sortProperty\n  return null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}