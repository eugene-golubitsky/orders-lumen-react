{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nexports.getIncrementer = getIncrementer;\nexports.transformData = transformData;\nexports.getVisibleDataForColumns = getVisibleDataForColumns;\nexports.hasColumnProperties = hasColumnProperties;\nexports.hasData = hasData;\nexports.addColumnPropertiesWhenNoneExist = addColumnPropertiesWhenNoneExist;\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n//From Immutable docs - https://github.com/facebook/immutable-js/wiki/Predicates\nfunction keyInArray(keys) {\n  var keySet = _immutable2.default.Set(keys);\n  return function (v, k) {\n    return keySet.has(k);\n  };\n}\nfunction getIncrementer(startIndex) {\n  var key = startIndex;\n  return function () {\n    return key++;\n  };\n}\nfunction isImmutableConvertibleValue(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null || value instanceof Date;\n}\n\n// From https://github.com/facebook/immutable-js/wiki/Converting-from-JS-objects#custom-conversion\nfunction fromJSGreedy(js) {\n  return isImmutableConvertibleValue(js) ? js : Array.isArray(js) ? _immutable2.default.Seq(js).map(fromJSGreedy).toList() : _immutable2.default.Seq(js).map(fromJSGreedy).toMap();\n}\nfunction transformData(data, renderProperties) {\n  if (!data) {\n    return {};\n  }\n  var hasCustomRowId = renderProperties.rowProperties && renderProperties.rowProperties.rowKey;\n\n  // Validate that the first item in our data has the custom Griddle key\n  if (hasCustomRowId && data.length > 0 && !data[0].hasOwnProperty(renderProperties.rowProperties.rowKey)) {\n    throw new Error('Griddle: Property \\'' + renderProperties.rowProperties.rowKey + '\\' doesn\\'t exist in row data. Please specify a rowKey that exists in <RowDefinition>');\n  }\n  var list = [];\n  var lookup = {};\n  data.forEach(function (rowData, index) {\n    var map = fromJSGreedy(rowData);\n\n    // if this has a row key use that -- otherwise use Griddle key\n    var key = hasCustomRowId ? rowData[renderProperties.rowProperties.rowKey] : index;\n\n    // if our map object already has griddleKey use that -- otherwise add key as griddleKey\n    var keyedData = map.has('griddleKey') ? map : map.set('griddleKey', key);\n    list.push(keyedData);\n    lookup[key] = index;\n  });\n  return {\n    data: new _immutable2.default.List(list),\n    lookup: new _immutable2.default.Map(lookup)\n  };\n}\n\n/** Gets the visible data based on columns\n *  @param (List<Map>) data - data collection\n *  @param (array<string>) columns - list of columns to display\n *\n *  TODO: Needs tests\n */\nfunction getVisibleDataForColumns(data, columns) {\n  if (data.size < 1) {\n    return data;\n  }\n  var dataColumns = data.get(0).keySeq().toArray();\n  var metadataColumns = dataColumns.filter(function (item) {\n    return columns.indexOf(item) < 0;\n  });\n\n  //if columns are specified but aren't in the data\n  //make it up (as null). We will append this column\n  //to the resultant data\n  var magicColumns = columns.filter(function (item) {\n    return dataColumns.indexOf(item) < 0;\n  }).reduce(function (original, item) {\n    original[item] = null;\n    return original;\n  }, {});\n  //combine the metadata and the \"magic\" columns\n  var extra = data.map(function (d, i) {\n    return new _immutable2.default.Map(Object.assign(magicColumns));\n  });\n  var result = data.map(function (d) {\n    return d.filter(keyInArray(columns));\n  });\n  return result.mergeDeep(extra).map(function (item) {\n    return item.sortBy(function (val, key) {\n      return columns.indexOf(key) > -1 ? columns.indexOf(key) : MAX_SAFE_INTEGER;\n    });\n  });\n}\n\n/* TODO: Add documentation and tests for this whole section!*/\n\n/** Does this initial state object have column properties?\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction hasColumnProperties(stateObject) {\n  return stateObject.hasOwnProperty('renderProperties') && stateObject.renderProperties.hasOwnProperty('columnProperties') && Object.keys(stateObject.renderProperties.columnProperties).length > 0;\n}\n\n/** Does this initial state object have data?\n * @param (object) stateObject - a non-immutable state object for initialization\n */\nfunction hasData(stateObject) {\n  return !!stateObject.data && stateObject.data.length > 0;\n}\n\n/** Gets a new state object (not immutable) that has columnProperties if none exist\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction addColumnPropertiesWhenNoneExist(stateObject) {\n  if (!hasData(stateObject) || hasColumnProperties(stateObject)) {\n    return stateObject;\n  }\n  return _extends({}, stateObject, {\n    renderProperties: {\n      columnProperties: Object.keys(stateObject.data[0]).reduce(function (previous, current) {\n        previous[current] = {\n          id: current,\n          visible: true\n        };\n        return previous;\n      }, {})\n    }\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","getIncrementer","transformData","getVisibleDataForColumns","hasColumnProperties","hasData","addColumnPropertiesWhenNoneExist","_immutable","require","_immutable2","_interopRequireDefault","__esModule","default","keyInArray","keys","keySet","Set","v","k","has","startIndex","isImmutableConvertibleValue","Date","fromJSGreedy","js","Array","isArray","Seq","map","toList","toMap","data","renderProperties","hasCustomRowId","rowProperties","rowKey","Error","list","lookup","forEach","rowData","index","keyedData","set","push","List","Map","columns","size","dataColumns","get","keySeq","toArray","metadataColumns","filter","item","indexOf","magicColumns","reduce","original","extra","d","result","mergeDeep","sortBy","val","MAX_SAFE_INTEGER","stateObject","columnProperties","previous","current","id","visible"],"sources":["/Users/eugo/commentsold/lumen/public/front/node_modules/griddle-react/dist/module/utils/dataUtils.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.getIncrementer = getIncrementer;\nexports.transformData = transformData;\nexports.getVisibleDataForColumns = getVisibleDataForColumns;\nexports.hasColumnProperties = hasColumnProperties;\nexports.hasData = hasData;\nexports.addColumnPropertiesWhenNoneExist = addColumnPropertiesWhenNoneExist;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//From Immutable docs - https://github.com/facebook/immutable-js/wiki/Predicates\nfunction keyInArray(keys) {\n  var keySet = _immutable2.default.Set(keys);\n  return function (v, k) {\n\n    return keySet.has(k);\n  };\n}\n\nfunction getIncrementer(startIndex) {\n  var key = startIndex;\n  return function () {\n    return key++;\n  };\n}\n\nfunction isImmutableConvertibleValue(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null || value instanceof Date;\n}\n\n// From https://github.com/facebook/immutable-js/wiki/Converting-from-JS-objects#custom-conversion\nfunction fromJSGreedy(js) {\n  return isImmutableConvertibleValue(js) ? js : Array.isArray(js) ? _immutable2.default.Seq(js).map(fromJSGreedy).toList() : _immutable2.default.Seq(js).map(fromJSGreedy).toMap();\n}\n\nfunction transformData(data, renderProperties) {\n  if (!data) {\n    return {};\n  }\n\n  var hasCustomRowId = renderProperties.rowProperties && renderProperties.rowProperties.rowKey;\n\n  // Validate that the first item in our data has the custom Griddle key\n  if (hasCustomRowId && data.length > 0 && !data[0].hasOwnProperty(renderProperties.rowProperties.rowKey)) {\n    throw new Error('Griddle: Property \\'' + renderProperties.rowProperties.rowKey + '\\' doesn\\'t exist in row data. Please specify a rowKey that exists in <RowDefinition>');\n  }\n\n  var list = [];\n  var lookup = {};\n\n  data.forEach(function (rowData, index) {\n    var map = fromJSGreedy(rowData);\n\n    // if this has a row key use that -- otherwise use Griddle key\n    var key = hasCustomRowId ? rowData[renderProperties.rowProperties.rowKey] : index;\n\n    // if our map object already has griddleKey use that -- otherwise add key as griddleKey\n    var keyedData = map.has('griddleKey') ? map : map.set('griddleKey', key);\n\n    list.push(keyedData);\n    lookup[key] = index;\n  });\n\n  return {\n    data: new _immutable2.default.List(list),\n    lookup: new _immutable2.default.Map(lookup)\n  };\n}\n\n/** Gets the visible data based on columns\n *  @param (List<Map>) data - data collection\n *  @param (array<string>) columns - list of columns to display\n *\n *  TODO: Needs tests\n */\nfunction getVisibleDataForColumns(data, columns) {\n  if (data.size < 1) {\n    return data;\n  }\n\n  var dataColumns = data.get(0).keySeq().toArray();\n\n  var metadataColumns = dataColumns.filter(function (item) {\n    return columns.indexOf(item) < 0;\n  });\n\n  //if columns are specified but aren't in the data\n  //make it up (as null). We will append this column\n  //to the resultant data\n  var magicColumns = columns.filter(function (item) {\n    return dataColumns.indexOf(item) < 0;\n  }).reduce(function (original, item) {\n    original[item] = null;return original;\n  }, {});\n  //combine the metadata and the \"magic\" columns\n  var extra = data.map(function (d, i) {\n    return new _immutable2.default.Map(Object.assign(magicColumns));\n  });\n\n  var result = data.map(function (d) {\n    return d.filter(keyInArray(columns));\n  });\n\n  return result.mergeDeep(extra).map(function (item) {\n    return item.sortBy(function (val, key) {\n      return columns.indexOf(key) > -1 ? columns.indexOf(key) : MAX_SAFE_INTEGER;\n    });\n  });\n}\n\n/* TODO: Add documentation and tests for this whole section!*/\n\n/** Does this initial state object have column properties?\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction hasColumnProperties(stateObject) {\n  return stateObject.hasOwnProperty('renderProperties') && stateObject.renderProperties.hasOwnProperty('columnProperties') && Object.keys(stateObject.renderProperties.columnProperties).length > 0;\n}\n\n/** Does this initial state object have data?\n * @param (object) stateObject - a non-immutable state object for initialization\n */\nfunction hasData(stateObject) {\n  return !!stateObject.data && stateObject.data.length > 0;\n}\n\n/** Gets a new state object (not immutable) that has columnProperties if none exist\n * @param (object) stateObject - a non-immutable state object for initialization\n *\n * TODO: Needs tests\n */\nfunction addColumnPropertiesWhenNoneExist(stateObject) {\n  if (!hasData(stateObject) || hasColumnProperties(stateObject)) {\n    return stateObject;\n  }\n\n  return _extends({}, stateObject, {\n    renderProperties: {\n      columnProperties: Object.keys(stateObject.data[0]).reduce(function (previous, current) {\n        previous[current] = { id: current, visible: true };\n\n        return previous;\n      }, {})\n    }\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}