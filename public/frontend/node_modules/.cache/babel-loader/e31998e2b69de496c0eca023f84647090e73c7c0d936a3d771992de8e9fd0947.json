{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GRIDDLE_INITIALIZED = GRIDDLE_INITIALIZED;\nexports.GRIDDLE_LOADED_DATA = GRIDDLE_LOADED_DATA;\nexports.GRIDDLE_SET_PAGE_SIZE = GRIDDLE_SET_PAGE_SIZE;\nexports.GRIDDLE_SET_PAGE = GRIDDLE_SET_PAGE;\nexports.GRIDDLE_SET_FILTER = GRIDDLE_SET_FILTER;\nexports.GRIDDLE_SET_SORT = GRIDDLE_SET_SORT;\nexports.GRIDDLE_TOGGLE_SETTINGS = GRIDDLE_TOGGLE_SETTINGS;\nexports.GRIDDLE_TOGGLE_COLUMN = GRIDDLE_TOGGLE_COLUMN;\nexports.GRIDDLE_UPDATE_STATE = GRIDDLE_UPDATE_STATE;\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _lodash = require('lodash');\nvar _lodash2 = _interopRequireDefault(_lodash);\nvar _dataUtils = require('../utils/dataUtils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\n/** Sets the default render properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n *\n * TODO: Consider renaming this to be more in line with what it's actually doing (setting render properties)\n*/\nfunction GRIDDLE_INITIALIZED(initialState) {\n  var tempState = Object.assign({}, initialState);\n  tempState = (0, _dataUtils.addColumnPropertiesWhenNoneExist)(tempState);\n  //TODO: could probably make this more efficient by removing data\n  // making the rest of the properties initial state and\n  // setting the mapped data on the new initial state immutable object\n  if (initialState.hasOwnProperty('data') && initialState.data.length > 0 && !initialState.data[0].hasOwnProperty('griddleKey')) {\n    tempState.data = (0, _dataUtils.transformDataToList)(initialState.data);\n  }\n  return _immutable2.default.fromJS(tempState);\n}\n\n/** Sets the griddle data\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\n\n/*\n * State\n * ------------------\n *  data {Immutable.List} - the data that the grid is displaying\n *  loading {boolean} - is the data currently loading\n *  renderProperties {Immutable.Map} - the properties that determine how the grid should be displayed\n *  pageProperties {Immutable.Map} - the metadata for paging information\n *  .-- currentPage {int} - The current, visible page\n *  .-- pageSize {int} - The number of records to display\n *  sortProperties {Immutable.List} - the metadata surrounding sort\n *  .-- id {string} - the column id\n *  .-- sortAscending {boolean} - the direction of the sort. Index matches that of sortColumns\n **/\nfunction GRIDDLE_LOADED_DATA(state, action, helpers) {\n  return state.set('data', (0, _dataUtils.transformDataToList)(action.data)).set('loading', false);\n}\n\n/** Sets the current page size\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE_SIZE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], 1).setIn(['pageProperties', 'pageSize'], action.pageSize);\n}\n\n/** Sets the current page\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], action.pageNumber);\n}\n\n/** Sets the filter\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_FILTER(state, action) {\n  return state.set('filter', action.filter);\n}\n\n/** Sets sort properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_SORT(state, action) {\n  // turn this into an array if it's not already\n  var sortProperties = action.sortProperties.hasOwnProperty('length') ? action.sortProperties : [action.sortProperties];\n  return state.set('sortProperties', new _immutable2.default.fromJS(sortProperties));\n}\n\n/** Sets the settings visibility to true / false depending on the current property\n */\nfunction GRIDDLE_TOGGLE_SETTINGS(state, action) {\n  // if undefined treat as if it's false\n  var showSettings = state.get('showSettings') || false;\n  return state.set('showSettings', !showSettings);\n}\nfunction GRIDDLE_TOGGLE_COLUMN(state, action) {\n  // flips the visible state if the column property exists\n  return state.getIn(['renderProperties', 'columnProperties', action.columnId]) ? state.setIn(['renderProperties', 'columnProperties', action.columnId, 'visible'], !state.getIn(['renderProperties', 'columnProperties', action.columnId, 'visible'])) :\n  // if the columnProperty doesn't exist, create a new one and set the property to true\n  state.setIn(['renderProperties', 'columnProperties', action.columnId], new _immutable2.default.Map({\n    id: action.columnId,\n    visible: true\n  }));\n}\nfunction GRIDDLE_UPDATE_STATE(state, action) {\n  var data = (0, _dataUtils.transformDataToList)(action.newState.data);\n  var newState = _lodash2.default.omit(action.newState, data);\n  return state.mergeDeep(_immutable2.default.fromJS(newState)).set('data', data);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","GRIDDLE_INITIALIZED","GRIDDLE_LOADED_DATA","GRIDDLE_SET_PAGE_SIZE","GRIDDLE_SET_PAGE","GRIDDLE_SET_FILTER","GRIDDLE_SET_SORT","GRIDDLE_TOGGLE_SETTINGS","GRIDDLE_TOGGLE_COLUMN","GRIDDLE_UPDATE_STATE","_immutable","require","_immutable2","_interopRequireDefault","_lodash","_lodash2","_dataUtils","obj","__esModule","default","initialState","tempState","assign","addColumnPropertiesWhenNoneExist","hasOwnProperty","data","length","transformDataToList","fromJS","state","action","helpers","set","setIn","pageSize","pageNumber","filter","sortProperties","showSettings","get","getIn","columnId","Map","id","visible","newState","omit","mergeDeep"],"sources":["/Users/eugo/commentsold/lumen/public/front/node_modules/griddle-react/dist/module/reducers/dataReducer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GRIDDLE_INITIALIZED = GRIDDLE_INITIALIZED;\nexports.GRIDDLE_LOADED_DATA = GRIDDLE_LOADED_DATA;\nexports.GRIDDLE_SET_PAGE_SIZE = GRIDDLE_SET_PAGE_SIZE;\nexports.GRIDDLE_SET_PAGE = GRIDDLE_SET_PAGE;\nexports.GRIDDLE_SET_FILTER = GRIDDLE_SET_FILTER;\nexports.GRIDDLE_SET_SORT = GRIDDLE_SET_SORT;\nexports.GRIDDLE_TOGGLE_SETTINGS = GRIDDLE_TOGGLE_SETTINGS;\nexports.GRIDDLE_TOGGLE_COLUMN = GRIDDLE_TOGGLE_COLUMN;\nexports.GRIDDLE_UPDATE_STATE = GRIDDLE_UPDATE_STATE;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dataUtils = require('../utils/dataUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** Sets the default render properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n *\n * TODO: Consider renaming this to be more in line with what it's actually doing (setting render properties)\n*/\nfunction GRIDDLE_INITIALIZED(initialState) {\n  var tempState = Object.assign({}, initialState);\n  tempState = (0, _dataUtils.addColumnPropertiesWhenNoneExist)(tempState);\n  //TODO: could probably make this more efficient by removing data\n  // making the rest of the properties initial state and\n  // setting the mapped data on the new initial state immutable object\n  if (initialState.hasOwnProperty('data') && initialState.data.length > 0 && !initialState.data[0].hasOwnProperty('griddleKey')) {\n    tempState.data = (0, _dataUtils.transformDataToList)(initialState.data);\n  }\n\n  return _immutable2.default.fromJS(tempState);\n}\n\n/** Sets the griddle data\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\n\n\n/*\n * State\n * ------------------\n *  data {Immutable.List} - the data that the grid is displaying\n *  loading {boolean} - is the data currently loading\n *  renderProperties {Immutable.Map} - the properties that determine how the grid should be displayed\n *  pageProperties {Immutable.Map} - the metadata for paging information\n *  .-- currentPage {int} - The current, visible page\n *  .-- pageSize {int} - The number of records to display\n *  sortProperties {Immutable.List} - the metadata surrounding sort\n *  .-- id {string} - the column id\n *  .-- sortAscending {boolean} - the direction of the sort. Index matches that of sortColumns\n **/\nfunction GRIDDLE_LOADED_DATA(state, action, helpers) {\n  return state.set('data', (0, _dataUtils.transformDataToList)(action.data)).set('loading', false);\n}\n\n/** Sets the current page size\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE_SIZE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], 1).setIn(['pageProperties', 'pageSize'], action.pageSize);\n}\n\n/** Sets the current page\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], action.pageNumber);\n}\n\n/** Sets the filter\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_FILTER(state, action) {\n  return state.set('filter', action.filter);\n}\n\n/** Sets sort properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_SORT(state, action) {\n  // turn this into an array if it's not already\n  var sortProperties = action.sortProperties.hasOwnProperty('length') ? action.sortProperties : [action.sortProperties];\n\n  return state.set('sortProperties', new _immutable2.default.fromJS(sortProperties));\n}\n\n/** Sets the settings visibility to true / false depending on the current property\n */\nfunction GRIDDLE_TOGGLE_SETTINGS(state, action) {\n  // if undefined treat as if it's false\n  var showSettings = state.get('showSettings') || false;\n\n  return state.set('showSettings', !showSettings);\n}\n\nfunction GRIDDLE_TOGGLE_COLUMN(state, action) {\n  // flips the visible state if the column property exists\n  return state.getIn(['renderProperties', 'columnProperties', action.columnId]) ? state.setIn(['renderProperties', 'columnProperties', action.columnId, 'visible'], !state.getIn(['renderProperties', 'columnProperties', action.columnId, 'visible'])) :\n\n  // if the columnProperty doesn't exist, create a new one and set the property to true\n  state.setIn(['renderProperties', 'columnProperties', action.columnId], new _immutable2.default.Map({ id: action.columnId, visible: true }));\n}\n\nfunction GRIDDLE_UPDATE_STATE(state, action) {\n  var data = (0, _dataUtils.transformDataToList)(action.newState.data);\n  var newState = _lodash2.default.omit(action.newState, data);\n\n  return state.mergeDeep(_immutable2.default.fromJS(newState)).set('data', data);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}