{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GRIDDLE_INITIALIZED = GRIDDLE_INITIALIZED;\nexports.GRIDDLE_LOADED_DATA = GRIDDLE_LOADED_DATA;\nexports.GRIDDLE_SET_PAGE_SIZE = GRIDDLE_SET_PAGE_SIZE;\nexports.GRIDDLE_SET_PAGE = GRIDDLE_SET_PAGE;\nexports.GRIDDLE_SET_FILTER = GRIDDLE_SET_FILTER;\nexports.GRIDDLE_SET_SORT = GRIDDLE_SET_SORT;\nexports.GRIDDLE_TOGGLE_SETTINGS = GRIDDLE_TOGGLE_SETTINGS;\nexports.GRIDDLE_TOGGLE_COLUMN = GRIDDLE_TOGGLE_COLUMN;\nexports.GRIDDLE_UPDATE_STATE = GRIDDLE_UPDATE_STATE;\nvar _immutable = require('immutable');\nvar _immutable2 = _interopRequireDefault(_immutable);\nvar _dataUtils = require('../utils/dataUtils');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n  return target;\n}\n\n/*\n * State\n * ------------------\n *  data {Immutable.List} - the data that the grid is displaying\n *  loading {boolean} - is the data currently loading\n *  renderProperties {Immutable.Map} - the properties that determine how the grid should be displayed\n *  pageProperties {Immutable.Map} - the metadata for paging information\n *  .-- currentPage {int} - The current, visible page\n *  .-- pageSize {int} - The number of records to display\n *  sortProperties {Immutable.List} - the metadata surrounding sort\n *  .-- id {string} - the column id\n *  .-- sortAscending {boolean} - the direction of the sort. Index matches that of sortColumns\n **/\n\nfunction isColumnVisible(state, columnId) {\n  var hasRenderProperty = state.getIn(['renderProperties', 'columnProperties', columnId]);\n  var currentlyVisibleProperty = state.getIn(['renderProperties', 'columnProperties', columnId, 'visible']);\n\n  // if there is a render property and visible is not set, visible is true\n  if (hasRenderProperty && currentlyVisibleProperty === undefined) {\n    return true;\n  }\n\n  // if there is no render property currently and visible is not set\n  if (!hasRenderProperty && currentlyVisibleProperty === undefined) {\n    return false;\n  }\n  return currentlyVisibleProperty;\n}\n\n/** Sets the default render properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n *\n * TODO: Consider renaming this to be more in line with what it's actually doing (setting render properties)\n*/\nfunction GRIDDLE_INITIALIZED(initialState) {\n  var tempState = Object.assign({}, initialState);\n  tempState = (0, _dataUtils.addColumnPropertiesWhenNoneExist)(tempState);\n  //TODO: could probably make this more efficient by removing data\n  // making the rest of the properties initial state and\n  // setting the mapped data on the new initial state immutable object\n  if (initialState.data && initialState.data.length > 0) {\n    var transformedData = (0, _dataUtils.transformData)(initialState.data, initialState.renderProperties);\n    tempState.data = transformedData.data;\n    tempState.lookup = transformedData.lookup;\n  }\n  return _immutable2.default.fromJS(tempState);\n}\n\n/** Sets the griddle data\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_LOADED_DATA(state, action) {\n  var transformedData = (0, _dataUtils.transformData)(action.data, state.get('renderProperties').toJSON());\n  return state.set('data', transformedData.data).set('lookup', transformedData.lookup).set('loading', false);\n}\n\n/** Sets the current page size\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE_SIZE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], 1).setIn(['pageProperties', 'pageSize'], action.pageSize);\n}\n\n/** Sets the current page\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], action.pageNumber);\n}\n\n/** Sets the filter\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_FILTER(state, action) {\n  return state.set('filter', action.filter);\n}\n\n/** Sets sort properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_SORT(state, action) {\n  // turn this into an array if it's not already\n  var sortProperties = action.sortProperties.hasOwnProperty('length') ? action.sortProperties : [action.sortProperties];\n  return state.set('sortProperties', new _immutable2.default.fromJS(sortProperties));\n}\n\n/** Sets the settings visibility to true / false depending on the current property\n */\nfunction GRIDDLE_TOGGLE_SETTINGS(state, action) {\n  // if undefined treat as if it's false\n  var showSettings = state.get('showSettings') || false;\n  return state.set('showSettings', !showSettings);\n}\nfunction GRIDDLE_TOGGLE_COLUMN(state, action) {\n  // flips the visible state if the column property exists\n  var currentlyVisible = isColumnVisible(state, action.columnId);\n  return state.getIn(['renderProperties', 'columnProperties', action.columnId]) ? state.setIn(['renderProperties', 'columnProperties', action.columnId, 'visible'], !currentlyVisible) :\n  // if the columnProperty doesn't exist, create a new one and set the property to true\n  state.setIn(['renderProperties', 'columnProperties', action.columnId], new _immutable2.default.Map({\n    id: action.columnId,\n    visible: true\n  }));\n}\nvar defaultRenderProperties = _immutable2.default.fromJS({});\nfunction GRIDDLE_UPDATE_STATE(state, action) {\n  var _action$newState = action.newState,\n    data = _action$newState.data,\n    newState = _objectWithoutProperties(_action$newState, ['data']);\n  var mergedState = state.mergeDeep(_immutable2.default.fromJS(newState));\n  if (!data) {\n    return mergedState;\n  }\n  var renderProperties = state.get('renderProperties', defaultRenderProperties).toJSON();\n  var transformedData = (0, _dataUtils.transformData)(data, renderProperties);\n  return mergedState.set('data', transformedData.data).set('lookup', transformedData.lookup);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","GRIDDLE_INITIALIZED","GRIDDLE_LOADED_DATA","GRIDDLE_SET_PAGE_SIZE","GRIDDLE_SET_PAGE","GRIDDLE_SET_FILTER","GRIDDLE_SET_SORT","GRIDDLE_TOGGLE_SETTINGS","GRIDDLE_TOGGLE_COLUMN","GRIDDLE_UPDATE_STATE","_immutable","require","_immutable2","_interopRequireDefault","_dataUtils","obj","__esModule","default","_objectWithoutProperties","keys","target","i","indexOf","prototype","hasOwnProperty","call","isColumnVisible","state","columnId","hasRenderProperty","getIn","currentlyVisibleProperty","undefined","initialState","tempState","assign","addColumnPropertiesWhenNoneExist","data","length","transformedData","transformData","renderProperties","lookup","fromJS","action","get","toJSON","set","setIn","pageSize","pageNumber","filter","sortProperties","showSettings","currentlyVisible","Map","id","visible","defaultRenderProperties","_action$newState","newState","mergedState","mergeDeep"],"sources":["/Users/eugo/commentsold/lumen/public/front/node_modules/griddle-react/dist/module/reducers/dataReducer.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GRIDDLE_INITIALIZED = GRIDDLE_INITIALIZED;\nexports.GRIDDLE_LOADED_DATA = GRIDDLE_LOADED_DATA;\nexports.GRIDDLE_SET_PAGE_SIZE = GRIDDLE_SET_PAGE_SIZE;\nexports.GRIDDLE_SET_PAGE = GRIDDLE_SET_PAGE;\nexports.GRIDDLE_SET_FILTER = GRIDDLE_SET_FILTER;\nexports.GRIDDLE_SET_SORT = GRIDDLE_SET_SORT;\nexports.GRIDDLE_TOGGLE_SETTINGS = GRIDDLE_TOGGLE_SETTINGS;\nexports.GRIDDLE_TOGGLE_COLUMN = GRIDDLE_TOGGLE_COLUMN;\nexports.GRIDDLE_UPDATE_STATE = GRIDDLE_UPDATE_STATE;\n\nvar _immutable = require('immutable');\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _dataUtils = require('../utils/dataUtils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\n/*\n * State\n * ------------------\n *  data {Immutable.List} - the data that the grid is displaying\n *  loading {boolean} - is the data currently loading\n *  renderProperties {Immutable.Map} - the properties that determine how the grid should be displayed\n *  pageProperties {Immutable.Map} - the metadata for paging information\n *  .-- currentPage {int} - The current, visible page\n *  .-- pageSize {int} - The number of records to display\n *  sortProperties {Immutable.List} - the metadata surrounding sort\n *  .-- id {string} - the column id\n *  .-- sortAscending {boolean} - the direction of the sort. Index matches that of sortColumns\n **/\n\n\nfunction isColumnVisible(state, columnId) {\n  var hasRenderProperty = state.getIn(['renderProperties', 'columnProperties', columnId]);\n  var currentlyVisibleProperty = state.getIn(['renderProperties', 'columnProperties', columnId, 'visible']);\n\n  // if there is a render property and visible is not set, visible is true\n  if (hasRenderProperty && currentlyVisibleProperty === undefined) {\n    return true;\n  }\n\n  // if there is no render property currently and visible is not set\n  if (!hasRenderProperty && currentlyVisibleProperty === undefined) {\n    return false;\n  }\n\n  return currentlyVisibleProperty;\n}\n\n/** Sets the default render properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n *\n * TODO: Consider renaming this to be more in line with what it's actually doing (setting render properties)\n*/\nfunction GRIDDLE_INITIALIZED(initialState) {\n  var tempState = Object.assign({}, initialState);\n  tempState = (0, _dataUtils.addColumnPropertiesWhenNoneExist)(tempState);\n  //TODO: could probably make this more efficient by removing data\n  // making the rest of the properties initial state and\n  // setting the mapped data on the new initial state immutable object\n  if (initialState.data && initialState.data.length > 0) {\n    var transformedData = (0, _dataUtils.transformData)(initialState.data, initialState.renderProperties);\n    tempState.data = transformedData.data;\n    tempState.lookup = transformedData.lookup;\n  }\n\n  return _immutable2.default.fromJS(tempState);\n}\n\n/** Sets the griddle data\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_LOADED_DATA(state, action) {\n  var transformedData = (0, _dataUtils.transformData)(action.data, state.get('renderProperties').toJSON());\n\n  return state.set('data', transformedData.data).set('lookup', transformedData.lookup).set('loading', false);\n}\n\n/** Sets the current page size\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE_SIZE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], 1).setIn(['pageProperties', 'pageSize'], action.pageSize);\n}\n\n/** Sets the current page\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_PAGE(state, action) {\n  return state.setIn(['pageProperties', 'currentPage'], action.pageNumber);\n}\n\n/** Sets the filter\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_FILTER(state, action) {\n  return state.set('filter', action.filter);\n}\n\n/** Sets sort properties\n * @param {Immutable} state- Immutable previous state object\n * @param {Object} action - The action object to work with\n*/\nfunction GRIDDLE_SET_SORT(state, action) {\n  // turn this into an array if it's not already\n  var sortProperties = action.sortProperties.hasOwnProperty('length') ? action.sortProperties : [action.sortProperties];\n\n  return state.set('sortProperties', new _immutable2.default.fromJS(sortProperties));\n}\n\n/** Sets the settings visibility to true / false depending on the current property\n */\nfunction GRIDDLE_TOGGLE_SETTINGS(state, action) {\n  // if undefined treat as if it's false\n  var showSettings = state.get('showSettings') || false;\n\n  return state.set('showSettings', !showSettings);\n}\n\nfunction GRIDDLE_TOGGLE_COLUMN(state, action) {\n  // flips the visible state if the column property exists\n  var currentlyVisible = isColumnVisible(state, action.columnId);\n\n  return state.getIn(['renderProperties', 'columnProperties', action.columnId]) ? state.setIn(['renderProperties', 'columnProperties', action.columnId, 'visible'], !currentlyVisible) :\n\n  // if the columnProperty doesn't exist, create a new one and set the property to true\n  state.setIn(['renderProperties', 'columnProperties', action.columnId], new _immutable2.default.Map({ id: action.columnId, visible: true }));\n}\n\nvar defaultRenderProperties = _immutable2.default.fromJS({});\nfunction GRIDDLE_UPDATE_STATE(state, action) {\n  var _action$newState = action.newState,\n      data = _action$newState.data,\n      newState = _objectWithoutProperties(_action$newState, ['data']);\n\n  var mergedState = state.mergeDeep(_immutable2.default.fromJS(newState));\n  if (!data) {\n    return mergedState;\n  }\n\n  var renderProperties = state.get('renderProperties', defaultRenderProperties).toJSON();\n  var transformedData = (0, _dataUtils.transformData)(data, renderProperties);\n\n  return mergedState.set('data', transformedData.data).set('lookup', transformedData.lookup);\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}